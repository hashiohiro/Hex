
メモリ設定

名前           原点             長さ             属性
*default*        0x0000000000000000 0xffffffffffffffff

リンカスクリプトおよびメモリマップ

                0x0000000000010400                . = 0x10400

.text           0x0000000000010400      0x22b
                0x0000000000010400                _text_start = .
 *(.text)
 .text          0x0000000000010400      0x1d9 hex32kernel.o
                0x0000000000010400                HexMain
                0x00000000000104ca                InitializePalette
                0x00000000000104ef                SetPalette
                0x000000000001058f                BoxFill8
 *fill*         0x00000000000105d9        0x3 
 .text          0x00000000000105dc       0x4f hex32core_asm.o
                0x00000000000105dc                OpHLT
                0x00000000000105de                OpCLI
                0x00000000000105e0                OpSTI
                0x00000000000105e2                OpSTIHLT
                0x00000000000105e5                OpIn8
                0x00000000000105f0                OpIn16
                0x00000000000105fc                OpIn32
                0x0000000000010602                OpOut8
                0x000000000001060c                OpOut16
                0x0000000000010617                OpOut32
                0x0000000000010621                LoadEFlags
                0x0000000000010624                StoreEFlags
                0x000000000001062b                _text_end = .

.iplt           0x0000000000010630        0x0
 .iplt          0x0000000000010630        0x0 hex32kernel.o

.rodata         0x000000000001062b        0x0
                0x000000000001062b                _rodata_start = .
 *(.rodata)
                0x000000000001062b                _rodata_end = .

.eh_frame       0x000000000001062c       0x94
 .eh_frame      0x000000000001062c       0x94 hex32kernel.o

.rel.dyn        0x00000000000106c0        0x0
 .rel.got       0x00000000000106c0        0x0 hex32kernel.o
 .rel.iplt      0x00000000000106c0        0x0 hex32kernel.o
 .rel.text      0x00000000000106c0        0x0 hex32kernel.o

.data           0x00000000000106c0       0x30
                0x00000000000106c0                _data_start = .
 *(.data)
 .data          0x00000000000106c0       0x30 hex32kernel.o
                0x00000000000106f0                _data_end = .

.got            0x00000000000106f0        0x0
 .got           0x00000000000106f0        0x0 hex32kernel.o

.got.plt        0x00000000000106f0        0x0
 .got.plt       0x00000000000106f0        0x0 hex32kernel.o

.igot.plt       0x00000000000106f0        0x0
 .igot.plt      0x00000000000106f0        0x0 hex32kernel.o

.bss            0x00000000000106f0        0x0
                0x00000000000106f0                _bss_start = .
 *(.bss)
 .bss           0x00000000000106f0        0x0 hex32kernel.o
                0x00000000000106f0                _bss_end = .
LOAD hex32kernel.o
LOAD hex32core_asm.o
OUTPUT(hex32_tmp.o elf32-i386)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 hex32kernel.o
                                         0x12 (緩和前のサイズ)
